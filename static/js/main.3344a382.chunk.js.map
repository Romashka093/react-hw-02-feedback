{"version":3,"sources":["App.module.css","components/section/Section.js","components/feedbackOptions/FeedbackOptions.js","components/statistics/Statistics.js","components/notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","useStyles","makeStyles","theme","root","display","flexDirection","alignItems","margin","spacing","FeedbackOptions","options","onLeaveFeedback","classes","className","ButtonGroup","size","color","Button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","handleClick","evt","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","keyName","Object","keys","css","conteiner","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,UAAY,yB,uJCEvB,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/B,OACE,iCACE,4BAAKD,GACJC,G,4BCDDC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ,QAAS,CACPC,OAAQL,EAAMM,QAAQ,SAKrB,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACnCC,EAAUZ,IAChB,OACE,yBAAKa,UAAWD,EAAQT,MACtB,kBAACW,EAAA,EAAD,CAAaC,KAAK,QAAQC,MAAM,WAC9B,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLC,KAAMT,EAAQ,GACdU,QAAS,kBAAMT,EAAgB,GAAD,OAAID,EAAQ,OAH5C,QAOA,kBAACO,EAAA,EAAD,CACEC,KAAK,SACLC,KAAMT,EAAQ,GACdU,QAAS,kBAAMT,EAAgB,GAAD,OAAID,EAAQ,OAH5C,WAOA,kBAACO,EAAA,EAAD,CACEC,KAAK,SACLC,KAAMT,EAAQ,GACdU,QAAS,kBAAMT,EAAgB,GAAD,OAAID,EAAQ,OAH5C,SCjCD,SAASW,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACtD,OACE,6BACE,oCACQ,8BAAOJ,IAEf,uCACW,8BAAOC,IAElB,mCACO,8BAAOC,IAEd,qCACS,8BAAOC,IAEhB,iDACqB,8BAAOC,EAAP,OChBpB,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OACE,oCACE,2BAAIA,I,qBCEGC,EAAb,4MACEC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAmBEO,YAAc,SAAAC,GACZ,IAAMb,EAAOa,EACb,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJf,EAAOe,EAAUf,GAAQ,OAvBlC,EA4BEgB,mBAAqB,WACnB,OAAO,EAAKL,MAAMR,KAAO,EAAKQ,MAAMP,QAAU,EAAKO,MAAMN,KA7B7D,EAgCEY,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKR,MAAMR,KAAO,EAAKa,qBAAwB,MAjCtE,uDAoCY,IAAD,EACwBI,KAAKT,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBgB,EAAUC,OAAOC,KAAKH,KAAKT,OAEjC,OACE,yBAAKjB,UAAW8B,IAAIC,WAClB,kBAAC/C,EAAD,CAASC,MAAM,yBACb,kBAACW,EAAD,CACEC,QAAS8B,EACT7B,gBAAiB4B,KAAKR,eAG1B,kBAAClC,EAAD,CAASC,MAAM,cACkB,IAA9ByC,KAAKJ,qBACJ,kBAACR,EAAD,CAAcC,QAAQ,sBAEtB,kBAACP,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,KAAKJ,qBACZT,mBAAoBa,KAAKH,0CAzDvC,GAAyBS,aAAZhB,EAOJiB,aAAe,CACpBxB,KAAM,EACNC,QAAS,EACTC,IAAK,GCdTuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3344a382.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"App_conteiner__1Rp_J\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport function FeedbackOptions({ options, onLeaveFeedback }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <ButtonGroup size=\"large\" color=\"inherit\">\n        <Button\n          type=\"button\"\n          name={options[0]}\n          onClick={() => onLeaveFeedback(`${options[0]}`)}\n        >\n          Good\n        </Button>\n        <Button\n          type=\"button\"\n          name={options[1]}\n          onClick={() => onLeaveFeedback(`${options[1]}`)}\n        >\n          Neutral\n        </Button>\n        <Button\n          type=\"button\"\n          name={options[2]}\n          onClick={() => onLeaveFeedback(`${options[2]}`)}\n        >\n          Bad\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <p>\n        Good: <span>{good}</span>\n      </p>\n      <p>\n        Neutral: <span>{neutral}</span>\n      </p>\n      <p>\n        Bad: <span>{bad}</span>\n      </p>\n      <p>\n        Total: <span>{total}</span>\n      </p>\n      <p>\n        Positive feedback: <span>{positivePercentage}%</span>\n      </p>\n    </div>\n  );\n}\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Notification({ message }) {\n  return (\n    <>\n      <p>{message}</p>\n    </>\n  );\n}\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Section } from './components/section/Section';\nimport { FeedbackOptions } from './components/feedbackOptions/FeedbackOptions';\nimport { Statistics } from './components/statistics/Statistics';\nimport { Notification } from './components/notification/Notification';\nimport PropTypes from 'prop-types';\nimport css from './App.module.css';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  static propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  };\n\n  handleClick = evt => {\n    const name = evt;\n    this.setState(prevState => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const keyName = Object.keys(this.state);\n\n    return (\n      <div className={css.conteiner}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={keyName}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}